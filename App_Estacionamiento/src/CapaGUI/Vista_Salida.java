/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CapaGUI;

import CapaDTO.Vehiculo;
import CapaNegocio.Controlador;
import java.awt.HeadlessException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author manue
 */
public class Vista_Salida extends javax.swing.JFrame {

    /**
     * Creates new form Vista_Salida
     */
    public Vista_Salida() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/Imagenes/car.png")).getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtPatenteSalida = new javax.swing.JTextField();
        btnCalcular = new javax.swing.JButton();
        btnMenu = new javax.swing.JButton();
        txtMontoTotal = new javax.swing.JTextField();
        btnFinalizar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableVehiculos = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtId_Vehiculo = new javax.swing.JTextField();
        btnEliminar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Salida Vehículos");
        setLocation(new java.awt.Point(150, 150));
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jLabel1.setText("Patente");

        txtPatenteSalida.setEditable(false);
        txtPatenteSalida.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnCalcular.setText("Calcular monto total");
        btnCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalcularActionPerformed(evt);
            }
        });

        btnMenu.setText("Menu");
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });

        txtMontoTotal.setEditable(false);
        txtMontoTotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnFinalizar.setText("Finalizar salida vehículo");
        btnFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarActionPerformed(evt);
            }
        });

        jLabel3.setText("Monto total");

        jTableVehiculos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Patente", "Hora Entrada", "Hora Salida", "Monto Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableVehiculos.getTableHeader().setReorderingAllowed(false);
        jTableVehiculos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableVehiculosMouseClicked(evt);
            }
        });
        jTableVehiculos.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jTableVehiculosComponentShown(evt);
            }
        });
        jScrollPane1.setViewportView(jTableVehiculos);
        if (jTableVehiculos.getColumnModel().getColumnCount() > 0) {
            jTableVehiculos.getColumnModel().getColumn(0).setPreferredWidth(20);
            jTableVehiculos.getColumnModel().getColumn(4).setPreferredWidth(30);
        }

        jLabel2.setText("Codigo Vehículo");

        txtId_Vehiculo.setEditable(false);
        txtId_Vehiculo.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnEliminar.setText("Eliminar registro");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("*Seleccione una fila de la tabla para porder Calcular MontoTotal, Finalizar Salida o Eliminar Registro*");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtMontoTotal)
                    .addComponent(txtPatenteSalida)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnFinalizar, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(btnCalcular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtId_Vehiculo))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(4, 4, 4)
                        .addComponent(txtId_Vehiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addGap(4, 4, 4)
                        .addComponent(txtPatenteSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMontoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCalcular)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFinalizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnMenu))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        txtPatenteSalida.getAccessibleContext().setAccessibleName("txtPante");
        btnCalcular.getAccessibleContext().setAccessibleName("btnCalcular");
        btnMenu.getAccessibleContext().setAccessibleName("btnMenu");
        txtMontoTotal.getAccessibleContext().setAccessibleName("txtCalcular");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed
        Menu abrir = new Menu();
        abrir.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnMenuActionPerformed

    private void btnCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalcularActionPerformed
        // TODO add your handling code here:
//        int patente = Integer.parseInt(this.txtPatenteSalida.getText());
        actualizarHoraSalida();
        String patente2 = this.txtPatenteSalida.getText();
        int idVehiculo = Integer.parseInt(this.txtId_Vehiculo.getText());
        Controlador c = new Controlador();
        String montoTotal = c.CalcularTotal(String.valueOf(idVehiculo));
        this.txtMontoTotal.setText(montoTotal);
        cargarListaVehiculos();
//        this.txtMontoTotal.setText(montoTotal);
//        this.txtMontoTotal.setText(c.BuscarPatente(patente));
    }//GEN-LAST:event_btnCalcularActionPerformed

    private void btnFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarActionPerformed
        EgresarVehiculo();
        cargarListaVehiculos();
    }//GEN-LAST:event_btnFinalizarActionPerformed

    private void jTableVehiculosComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTableVehiculosComponentShown

    }//GEN-LAST:event_jTableVehiculosComponentShown

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        cargarListaVehiculos();
    }//GEN-LAST:event_formComponentShown

    private void jTableVehiculosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableVehiculosMouseClicked
        int seleccion = this.jTableVehiculos.rowAtPoint(evt.getPoint());
        int fila = this.jTableVehiculos.getSelectedRow();
        
        this.txtId_Vehiculo.setText(String.valueOf(this.jTableVehiculos.getValueAt(seleccion, 0)));
        this.txtPatenteSalida.setText(String.valueOf(this.jTableVehiculos.getValueAt(seleccion, 1)));
    }//GEN-LAST:event_jTableVehiculosMouseClicked

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        eliminarVehiculo();
    }//GEN-LAST:event_btnEliminarActionPerformed

    public void actualizarHoraSalida() {
        try {
            Date d = new Date();
            GregorianCalendar gc = new GregorianCalendar();
            gc.setTime(d);
            SimpleDateFormat ff = new SimpleDateFormat("kk:mm:ss");
            String horaActual = ff.format(d);

            Controlador c = new Controlador();
            int idVehiculo = Integer.parseInt(this.txtId_Vehiculo.getText());
            
//            Vehiculo v = new Vehiculo(horaActual, idVehiculo);
            Vehiculo v = new Vehiculo(idVehiculo, horaActual, horaActual, horaActual, 0);
            c.IngresarHoraSalida(v);


        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Problemas de conexión con la Base de Datos",
                    "Mensajes", JOptionPane.ERROR_MESSAGE);
        }

    }

    public void EgresarVehiculo() {
        try {
            int Monto_Total = Integer.parseInt(this.txtMontoTotal.getText());
            Controlador c = new Controlador();
//            String patente = this.txtPatenteSalida.getText();
            int idVehiculo = Integer.parseInt(this.txtId_Vehiculo.getText());
            Vehiculo v = new Vehiculo(Monto_Total, idVehiculo);

            c.EgresoVehiculo(v);

            JOptionPane.showMessageDialog(this, "Vehiculo egresado correctamente",
                    "Mensajes", JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Problemas de conexión con la Base de Datos",
                    "Mensajes", JOptionPane.ERROR_MESSAGE);
        }

    }
    
    public void cargarListaVehiculos(){
        try
        {
            Controlador c = new Controlador();
            DefaultTableModel modelo = (DefaultTableModel) this.jTableVehiculos.getModel();
            modelo.setRowCount(0);
            ArrayList<Vehiculo> vehiculo = c.listarVehiculos();
            for(Vehiculo v : vehiculo)
            {
                Object fila[] = new Object[5];
                fila[0] = v.getID_Vehiculo();
                fila[1] = v.getPatente();
                fila[2] = v.getHora_Entrada();
                fila[3] = v.getHora_Salida();
                fila[4] = v.getMonto_Total();
                modelo.addRow(fila);
            }
            this.jTableVehiculos.setModel(modelo);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Problemas de conexión con la Base de Datos", 
                        "Mensajes", JOptionPane.ERROR_MESSAGE);     
        }
    }
    
    public void eliminarVehiculo(){
        try 
        {
            Controlador c = new Controlador();
            int filaSeleccionada = this.jTableVehiculos.getSelectedRow();
            //JOptionPane.showMessageDialog(this, filaSeleccionada);
            if(filaSeleccionada > -1)
            {
                int respuesta = JOptionPane.showConfirmDialog(this, "Está seguro que deseas eliminar a esta Patente.", 
                    "Mensajes", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
                if(respuesta == JOptionPane.YES_OPTION)
                {
                    String id = this.jTableVehiculos.getModel().getValueAt(filaSeleccionada, 0).toString();
                    if(c.eliminarVehiculo(id))
                    {
                        JOptionPane.showMessageDialog(this, "Vehiculo eliminado.","Mensajes",JOptionPane.INFORMATION_MESSAGE);
                        cargarListaVehiculos();
                    }
                }
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Para eliminar un registro, debe seleccionar una fila","Mensajes",JOptionPane.WARNING_MESSAGE);
            }
        } 
        catch (HeadlessException e) 
        {
            JOptionPane.showMessageDialog(this, "Se ha producido un error.",
                    "Mensaje", JOptionPane.ERROR_MESSAGE);
        }
        
        
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalcular;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnFinalizar;
    private javax.swing.JButton btnMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableVehiculos;
    private javax.swing.JTextField txtId_Vehiculo;
    private javax.swing.JTextField txtMontoTotal;
    private javax.swing.JTextField txtPatenteSalida;
    // End of variables declaration//GEN-END:variables
}
